name: "Terraform Plan with Cloudability"

on:
  pull_request:
    branches:
      - main # Change this to your main branch name

jobs:
  terraform:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required for OIDC
      contents: read
      pull-requests: write # Required to comment on PRs
    steps:
      # Step 1: Checkout the repository
      - name: "Checkout"
        uses: actions/checkout@v3

      # Step 2: Set up Terraform
      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v2
        with:
          # This is important to ensure a clean JSON output
          terraform_wrapper: false

      # Step 3: Configure AWS Credentials with OIDC
      # This is the recommended secure way to handle credentials
      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
    
      # Step 4: Initialize Terraform
      - name: "Terraform Init"
        run: terraform init

      # Step 5: Run a Terraform Plan and save it to a file
      - name: "Terraform Plan"
        id: plan
        run: terraform plan -no-color -out=tfplan.out

      # Step 6: Convert the binary plan to JSON
      - name: "Create JSON plan file"
        run: terraform show -json tfplan.out > tfplan.json

      # Step 7: Upload the JSON and Binary plans as an artifact for later steps
      - name: "Upload JSON plan artifact"
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-json
          path: tfplan.json
          
      - name: "Upload Binary plan artifact"
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-out
          path: tfplan.out

      # Step 8: Call the Cloudability Governance Action
  cloudability-governance:
    name: "Cloudability Governance"
    runs-on: ubuntu-latest
    needs: [terraform] # This ensures the 'terraform' job runs first
    # Define permissions for this job
    permissions:
      contents: read
      pull-requests: write # This is required to post comments on the PR
    steps:
      - name: "Download tfplan.json artifact"
        uses: actions/download-artifact@v4
        with:
          name: tfplan-json

      - name: Get Frontdoor token
        uses: ibm/ibm-cloudability-governance/actions/frontdoor/login@v0.1.0
        with:
          fd-url: ${{ vars.FD_URL }}
          fd-public-key: ${{ secrets.FD_KEY }}
          fd-secret-key: ${{ secrets.FD_SECRET }}

      - name: Get GitHub PR metadata
        uses: ibm/ibm-cloudability-governance/actions/github-info@v0.1.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pr-number: ${{ github.event.pull_request.number }}

      - name: Run Cloudability Governance Metadata Retrieval
        uses: ibm/ibm-cloudability-governance/actions/metadata@v0.1.0
        with:
          cloudability-host: ${{ vars.CLOUDABILITY_HOST }}
          fd-env-id: ${{ secrets.FD_ENV_ID }}
      
      - name: Run Cloudability Cost Estimation
        uses: ibm/ibm-cloudability-governance/actions/cost-estimation@v0.1.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pr-number: ${{ github.event.pull_request.number }}
          cloudability-host: ${{ secrets.CLOUDABILITY_HOST }}
          fd-env-id: ${{ secrets.FD_ENV_ID }}
          deployment-name: "demo"
          provider-accounts: |
            {
              "*": {
                "account_id": "${{ secrets.AWS_ACCOUNT_ID }}", 
                "vendor": "aws"
              }
            }
          tf-plan: "tfplan.json"
          resource-usage: "usage.json"

  terraform-apply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    needs: [terraform, cloudability-governance]
    environment: production # Best practice to require manual approval for production
    permissions:
      id-token: write
      contents: read
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        
      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
          
      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: "Download tfplan artifact"
        uses: actions/download-artifact@v4
        with:
          name: tfplan-out # Name of the binary plan artifact from the first job
          path: .
          
      - name: "Terraform Apply"
        run: terraform apply -auto-approve tfplan.out
